[project]
name = "fastemplate"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "TianaNanta", email = "andrianjakananta@gmail.com" }
]
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    "python-multipart>=0.0.9",
    "email-validator>=2.1.1",
    "passlib[bcrypt]>=1.7.4",
    "tenacity>=8.3.0",
    "pydantic>=2.7.1",
    "emails>=0.6",
    "gunicorn>=22.0.0",
    "jinja2>=3.1.4",
    "alembic>=1.13.1",
    "httpx>=0.27.0",
    "psycopg[binary]>=3.1.19",
    "sqlmodel>=0.0.18",
    "bcrypt>=4.1.3",
    "pydantic-settings>=2.2.1",
    "sentry-sdk[fastapi]>=2.2.0",
    "pyjwt>=2.8.0",
    "fastapi-pagination>=0.12.24",
    "fastapi-storages>=0.3.0",
    "pillow>=10.3.0",
]
readme = "README.md"
requires-python = ">= 3.10"
license = { text = "MIT" }

[tool.rye]
managed = true
virtual = true
dev-dependencies = [
    "pytest>=8.2.1",
    "mypy>=1.10.0",
    "ruff>=0.4.4",
    "pre-commit>=3.7.1",
    "types-passlib>=1.7.7.20240327",
    "coverage>=7.5.1",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
